<Activity mc:Ignorable="sap sap2010" x:Class="Process" this:Process.in_strAttachedFileName="test (2).xlsx" this:Process.in_strTriggerSenderEmailAddress="JohnDoe865@proton.me" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_strAttachedFileName" Type="InArgument(x:String)" />
    <x:Property Name="in_strTriggerSenderEmailAddress" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>978.4,2373.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="50">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="80">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="790.4,2308.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtGenderCountry" />
      <Variable x:TypeArguments="x:Int32" Name="intTransactionIndex" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtUserInfo" />
      <Variable x:TypeArguments="x:Boolean" Name="boolLoginSuccess" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="728,1963.2" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="691.2,1668.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="boolVPNEnabled" />
            <Variable x:TypeArguments="sd:DataTable" Name="dtTransactionSummaryInfo" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Preparing Processing Tansacation" sap:VirtualizedContainerService.HintSize="628.8,354.4" sap2010:WorkflowViewState.IdRef="TryCatch_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence sap:VirtualizedContainerService.HintSize="416,22.4" sap2010:WorkflowViewState.IdRef="Sequence_50">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Read the incoming excel file that contains the work items" DisplayName="Common\ReadExcelFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,197.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" Level="Info" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Common\ReadExcelFile.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strFilePath">[Path.Combine(in_Config("outputFolder").ToString,in_strAttachedFileName)]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strSheetName">Sheet1</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strSheetRange">A7</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_strOutputDataTableName">User Info</InArgument>
                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtOutput">[dtGenderCountry]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Utilities\ValidateOutputDataTable.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" Level="Info" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Utilities\ValidateOutputDataTable.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtToValidate">[dtGenderCountry]</InArgument>
                    <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_lstColumnNames">[new List (of string) From {"Gender","Country"}]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:BuildDataTable DataTable="[dtUserInfo]" DisplayName="Build Data Table &quot;User Info&quot;" sap:VirtualizedContainerService.HintSize="353.6,100" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;ID&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Gender&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Country&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;First_x0020_Name&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Last_x0020_Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Birthday&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Address&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Phone&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Country_x0020_Code&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Company&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Occupation&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Password&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:BuildDataTable>
                <ui:BuildDataTable DataTable="[dtTransactionSummaryInfo]" DisplayName="Build Data Table &quot;Transaction Summary&quot;" sap:VirtualizedContainerService.HintSize="353.6,100" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Start_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;End_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ID&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Error_x0020_Message&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Screenshot_x0020_Path&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:BuildDataTable>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Delete Previous &quot;Result.xlsx&quot; and &quot;Summary.xlsx&quot;" DisplayName="Common\Delete Files.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" Level="Info" LogEntry="WithArguments" LogExit="WithArguments" UnSafe="False" WorkflowFileName="Common\Delete Files.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_strFilesPaths">[new List (of String) From {Path.Combine( in_Config("outputFolder").ToString ,"Result.xlsx"),Path.Combine( in_Config("outputFolder").ToString ,"Summary.xlsx")}]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="419.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="SE-Handle" sap:VirtualizedContainerService.HintSize="416,316.8" sap2010:WorkflowViewState.IdRef="Sequence_51">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="353.6,182.4" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Error" Message="[&quot;AE/SE: &quot;+exception.Message]" />
                    <Rethrow sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="Rethrow_7" />
                  </Sequence>
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="419.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="BE - Handle" sap:VirtualizedContainerService.HintSize="416,22.4" sap2010:WorkflowViewState.IdRef="Sequence_52">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="353.6,182.4" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;BE: &quot;+exception.Message]" />
                    <Rethrow sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="Rethrow_6" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <TryCatch DisplayName="Process Invocation" sap:VirtualizedContainerService.HintSize="628.8,1228" sap2010:WorkflowViewState.IdRef="TryCatch_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence DisplayName="Process Invocation" sap:VirtualizedContainerService.HintSize="592,950.4" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictTransactionItemSummaryInfo" />
                  <Variable x:TypeArguments="x:String" Name="str_ScreenshotFilePath" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[intTransactionIndex]" DataTable="[dtGenderCountry]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="529.6,864" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,675.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictPersonalInfo" />
                          <Variable x:TypeArguments="x:String" Name="strID" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Transaction Index" sap:VirtualizedContainerService.HintSize="433.6,182.4" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Start Processing Transaction number: &quot; + (intTransactionIndex+1).ToString]" />
                        <ui:MultipleAssign sap2010:Annotation.AnnotationText="1. Define &quot;Personal Info&quot; Dictionary&#xA;2. Define &quot;Transaction Item Summary Info&quot; Dictionary&#xA;3. Set&quot;The Transaction Time to the current timeInfo&quot;" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="433.6,172.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictPersonalInfo]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(Of String, String)]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictTransactionItemSummaryInfo]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(Of String, String)]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[dictTransactionItemSummaryInfo("Start Date")]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[Date.Now.ToString]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:MultipleAssign>
                        <TryCatch DisplayName="Process Each Transaction Item" sap:VirtualizedContainerService.HintSize="433.6,233.6" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Process Each Transaction Item" sap:VirtualizedContainerService.HintSize="416,1298.4" sap2010:WorkflowViewState.IdRef="Sequence_8">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="strUserBirthday" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="FakeNameGenerator_ProvideData.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" Level="Info" LogEntry="WithArguments" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Applications\FakeNameGenerator\FakeNameGenerator_ProvideData.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_strGender">[CurrentRow(0).ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_strCountry">[CurrentRow(1).ToString]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="FakeNameGenerator_GetPersonInfo.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" Level="Info" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Applications\FakeNameGenerator\FakeNameGenerator_GetPersonInfo.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_strGender">[CurrentRow(0).ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_strCountry">[CurrentRow(1).ToString]</InArgument>
                                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_dictPersonalInfo">[dictPersonalInfo]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AutomationExercise_ClickSignUpLogin.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" Level="Info" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Applications\AutomationExercise\AutomationExercise_ClickSignUpLogin.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AutomationExercise_ProvideUsernameAndEmail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" Level="Info" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Applications\AutomationExercise\AutomationExercise_ProvideUsernameAndEmail.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_strUserName">[dictPersonalInfo("Username")]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_strEmail">[dictPersonalInfo("Email")]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AutomationExercise_CreateAccount.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" Level="Info" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Applications\AutomationExercise\AutomationExercise_CreateAccount.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dictPersonalInfo">[dictPersonalInfo]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AutomationExercise_ClickContinueButton.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" Level="Info" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Applications\AutomationExercise\AutomationExercise_ClickContinueButton.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AutomationExercise_ClickDeleteAccount.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" Level="Info" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Applications\AutomationExercise\AutomationExercise_ClickDeleteAccount.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AutomationExercise_ClickContinueButton.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,136.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" Level="Info" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Applications\AutomationExercise\AutomationExercise_ClickContinueButton.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="SE-Handle" sap:VirtualizedContainerService.HintSize="540.8,873.6" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478.4,182.4" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[&quot;AE/SE: &quot;+exception.Message]" />
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get the User Info to be used to generate a User Transacction ID" DisplayName="FakeNameGenerator_GetPersonInfoOnUnmatchedError" sap:VirtualizedContainerService.HintSize="478.4,197.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" Level="Info" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Applications\FakeNameGenerator\FakeNameGenerator_GetPersonInfoOnUnmatchedError.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_strGender">[CurrentRow(0).ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_strCountry">[CurrentRow(1).ToString]</InArgument>
                                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_dictPersonalInfo">[dictPersonalInfo]</OutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Framework\TakeScreenshot.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="478.4,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_Folder">[in_Config("screenshotsFolder").ToString]</InArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="out_FilePath">[str_ScreenshotFilePath]</OutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <ui:MultipleAssign sap2010:Annotation.AnnotationText="Multiple Assign &quot;Transaction Item Summary&quot; &#xA;1. End Date&#xA;2. Status&#xA;3. Error Message&#xA;4. Screenshot Path&#xA;" DisplayName="Multiple Assign &quot;Transaction Item Summary&quot;" sap:VirtualizedContainerService.HintSize="478.4,341.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[dictTransactionItemSummaryInfo("End Date")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Date.Now.ToString]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[dictTransactionItemSummaryInfo("Status")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">Failed</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[dictTransactionItemSummaryInfo("Error Message")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[dictTransactionItemSummaryInfo("Screenshot Path")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[str_ScreenshotFilePath]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:MultipleAssign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                            <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="400,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="BE - Handle" sap:VirtualizedContainerService.HintSize="416,22.4" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478.4,182.4" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;BE: &quot;+exception.Message]" />
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get the User Info to be used to generate a User Transacction ID" DisplayName="FakeNameGenerator_GetPersonInfo2.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="478.4,197.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" Level="Info" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Applications\FakeNameGenerator\FakeNameGenerator_GetPersonInfoOnUnmatchedError.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_strGender">[CurrentRow(0).ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_strCountry">[CurrentRow(1).ToString]</InArgument>
                                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_dictPersonalInfo">[dictPersonalInfo]</OutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Framework\TakeScreenshot.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="478.4,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_Folder">[in_Config("screenshotsFolder").ToString]</InArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="out_FilePath">[str_ScreenshotFilePath]</OutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <ui:MultipleAssign sap2010:Annotation.AnnotationText="Multiple Assign &quot;Transaction Item Summary&quot; &#xA;1. End Date&#xA;2. Status&#xA;3. Error Message&#xA;4. Screenshot Path&#xA;" DisplayName="Multiple Assign &quot;Transaction Item Summary&quot;" sap:VirtualizedContainerService.HintSize="478.4,341.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[dictTransactionItemSummaryInfo("End Date")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Date.Now.ToString]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[dictTransactionItemSummaryInfo("Status")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">Failed</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[dictTransactionItemSummaryInfo("Error Message")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[dictTransactionItemSummaryInfo("Screenshot Path")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[str_ScreenshotFilePath]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:MultipleAssign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                          <TryCatch.Finally>
                            <Sequence sap2010:Annotation.AnnotationText="1a). Request Transaction User ID&#xA;1b).  Assign  'Transaction User ID' to User &quot;Personal Info&quot; and &quot;Transaction Summary Info&quot;&#xA;2a). Write &quot;Personal Info&quot; Dictionary to Result.xlsx File&#xA;2b). Write &quot;Transaction Summary Info&quot; Dictionary to Summary.xlsx" DisplayName="initialize the Transaction Item" sap:VirtualizedContainerService.HintSize="603.2,1401.6" sap2010:WorkflowViewState.IdRef="Sequence_18">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence sap:VirtualizedContainerService.HintSize="540.8,1239.2" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Common\ReqResInAPI.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="478.4,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" Level="Info" LogEntry="OnlyInvocation" LogExit="WithArguments" UnSafe="False" WorkflowFileName="Common\ReqResInAPI.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_strName">[dictPersonalInfo("Username")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_strBirthday">[dictPersonalInfo("Birthday")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_strAddress">[dictPersonalInfo("Address")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_strPhone">[dictPersonalInfo("Phone")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_strCountryCode">[dictPersonalInfo("Country Code")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_strCompany">[dictPersonalInfo("Company")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_strOccupation">[dictPersonalInfo("Occupation")]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_strUserId">[strID]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:MultipleAssign sap2010:Annotation.AnnotationText="Assign ID to Personal Info and Transaction Summary" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,219.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[dictPersonalInfo("ID")]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[strID]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[dictTransactionItemSummaryInfo("ID")]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[strID]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:MultipleAssign>
                                <ui:MultipleAssign sap2010:Annotation.AnnotationText="Assign &quot;Transaction Summary&quot;&#xA;1. End Date &#xA;2. Status: to 'Completed' If it was not set at the 'Catch Exception Scope' to 'Failed" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,248" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[dictTransactionItemSummaryInfo("End Date")]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[Date.Now.ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[dictTransactionItemSummaryInfo("Status")]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[if( Not dictTransactionItemSummaryInfo.ContainsKey("Status"),"Completed", dictTransactionItemSummaryInfo("Status") )]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:MultipleAssign>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Utilities\TransformDateFormat.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="478.4,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_49" UnSafe="False" WorkflowFileName="Utilities\TransformDateFormat.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_strBirthDay">[dictPersonalInfo("Birthday")]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_strBirthDayTransformed">[dictPersonalInfo("Birthday")]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Write Into Result.xlsx" DisplayName="Common\WriteIntoFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="478.4,184.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Common\WriteIntoFile.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_strFilePath">[Path.Combine( in_Config("outputFolder").ToString ,"Result.xlsx")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_strSheetName">Sheet1</InArgument>
                                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtUserInfo">[dtUserInfo]</InArgument>
                                    <InArgument x:TypeArguments="s:Object[]" x:Key="in_arrObjArrayRow" xml:space="preserve">[{dictPersonalInfo("ID"),
dictPersonalInfo("Gender"),
dictPersonalInfo("Country"),
dictPersonalInfo("First Name"),
dictPersonalInfo("Last Name"),
dictPersonalInfo("Birthday"),
dictPersonalInfo("Address"),
dictPersonalInfo("Phone"),
dictPersonalInfo("Country Code"),
dictPersonalInfo("Company"),
dictPersonalInfo("Occupation"),
dictPersonalInfo("Password")
}]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Write Into Summary.xlsx" DisplayName="Common\WriteIntoFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="478.4,168" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" UnSafe="False" WorkflowFileName="Common\WriteIntoFile.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_strFilePath">[Path.Combine( in_Config("outputFolder").ToString ,"Summary.xlsx")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_strSheetName">Sheet1</InArgument>
                                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtUserInfo">[dtTransactionSummaryInfo]</InArgument>
                                    <InArgument x:TypeArguments="s:Object[]" x:Key="in_arrObjArrayRow" xml:space="preserve">[{dictTransactionItemSummaryInfo("Start Date"),
dictTransactionItemSummaryInfo("End Date"),
dictTransactionItemSummaryInfo("ID"),
dictTransactionItemSummaryInfo("Status"),
If(dictTransactionItemSummaryInfo.ContainsKey("Error Message"), dictTransactionItemSummaryInfo("Error Message"),String.Empty),
If(dictTransactionItemSummaryInfo.ContainsKey("Screenshot Path"), dictTransactionItemSummaryInfo("Screenshot Path"),String.Empty)
}]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </Sequence>
                          </TryCatch.Finally>
                        </TryCatch>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="595.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="SE-Handle" sap:VirtualizedContainerService.HintSize="416,252" sap2010:WorkflowViewState.IdRef="Sequence_46">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="353.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Error" Message="[&quot;AE/SE: &quot;+exception.Message]" />
                  </Sequence>
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="595.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="BE - Handle" sap:VirtualizedContainerService.HintSize="416,252" sap2010:WorkflowViewState.IdRef="Sequence_47">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="353.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;BE: &quot;+exception.Message]" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:SystemException" sap:VirtualizedContainerService.HintSize="694.4,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:SystemException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:SystemException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="SE-Handle" sap:VirtualizedContainerService.HintSize="416,316.8" sap2010:WorkflowViewState.IdRef="Sequence_27">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="SE-Handle" sap:VirtualizedContainerService.HintSize="353.6,182.4" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Error" Message="[&quot;AE/SE: &quot;+exception.Message]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <Rethrow sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="694.4,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="BE-Handle" sap:VirtualizedContainerService.HintSize="416,22.4" sap2010:WorkflowViewState.IdRef="Sequence_28">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="SE-Handle" sap:VirtualizedContainerService.HintSize="353.6,182.4" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[&quot;BE: &quot;+exception.Message]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Common\Email\SendEmail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_48" UnSafe="False" WorkflowFileName="Common\Email\SendEmail.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strMailBody">[exception.Message]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strMailSubject">Attention Needed: Business Exception Detected</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_strTriggerEmailAddress">[in_strTriggerSenderEmailAddress]</InArgument>
                  <InArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="in_attachmentFilePaths" />
                  <InArgument x:TypeArguments="x:String" x:Key="in_strSenderEmailPassword">[in_Config("emailPassword").ToString]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Rethrow sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="Rethrow_3" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Send Back an Email with 'Result.xlsx' and 'Summary.xlsx'" DisplayName="Common\Email\SendEmail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="728,180.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" Level="Info" LogEntry="OnlyInvocation" LogExit="OnlySuccessfulReturn" UnSafe="False" WorkflowFileName="Common\Email\SendEmail.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_strMailBody">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_strMailSubject">Send Back Transaction Result and Summary</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_strTriggerEmailAddress">[in_strTriggerSenderEmailAddress]</InArgument>
        <InArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="in_attachmentFilePaths">[{Path.Combine(in_Config("outputFolder").ToString,"Result.xlsx"),Path.Combine(in_Config("outputFolder").ToString,"Summary.xlsx")}]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_strSenderEmailPassword">[in_Config("emailPassword").ToString]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>